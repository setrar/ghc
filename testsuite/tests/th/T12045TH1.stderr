T12045TH1.hs:(9,2)-(11,53): Splicing declarations
    [d| type family F (a :: k) :: Type where
          F @Type Int = Bool
          F @(Type -> Type) Maybe = Char |]
  ======>
    type family F (a :: k) :: Type where
      F @Type Int = Bool
      F @(Type -> Type) Maybe = Char
T12045TH1.hs:14:2-32: Splicing declarations
    [d| data family D (a :: k) |] ======> data family D (a :: k)
T12045TH1.hs:16:2-41: Splicing declarations
    [d| data instance D @Type a = DBool |]
  ======>
    data instance D @Type a = DBool
T12045TH1.hs:18:2-51: Splicing declarations
    [d| data instance D @(Type -> Type) b = DChar |]
  ======>
    data instance D @(Type -> Type) b = DChar
